searchState.loadedDescShard("lopdf", 0, "lopdf\nBrackets limit reached. To many brackets nested.\nCould not decode content.\nError when decrypting the contents of the file\nDictionary key was not found.\nDictionary object.\nA PDF document.\nContains the error value\nInvalid file header\nIO error\nInvalid command.\nPDF document has no Outlines.\nBasic PDF object types defined in an enum.\nObject identifier consists of two parts: object number and …\nFound Object ID does not match Expected Object ID.\nThe Object ID was not found.\nOffset in file is invalid.\nContains the success value\nPage number was not found in document.\nInvalid object while parsing at offset.\nCould not parse cross reference table.\nThe trailer’s “Prev” field was invalid.\nDereferencing object failed due to a reference cycle.\nDereferencing object reached the limit. This might …\nCould not find start of cross reference table.\nStream object Warning - all streams must be indirect …\nThe trailer’s “XRefStm” field was invalid.\nDecoding byte vector failed.\nString objects can be written in two formats.\nSyntax error while parsing the file.\nCould not parse ToUnicodeCMap.\nThe file trailer was invalid.\nThe object does not have the expected type.\nDecoding byte vector to UTF8 String failed.\nError while parsing cross reference table.\nAdd Graphics State to a page.\nAdd Graphics State to a page.\nAdd PDF object into document’s object list.\nAdd content to a page. All existing content will be …\nAdd content to a page. All existing content will be …\nAdd XObject to a page.\nAdd XObject to a page.\nAdjusts the Parents that have a ObjectId of (0,_) to that …\nCan the stream be compressed by the <code>Document::compress()</code> …\nWARNING: <code>tm_wday</code> (weekday), <code>tm_yday</code> (day index in year), …\nGet the object value as a float. Unlike as_f64() this will …\nReturn a reference to the inner  <code>IndexMap</code>.\nReturn a mut reference to the inner <code>IndexMap</code>.\nused to locate a stored Bookmark so children can be …\nThe bookmarks in the document. Render at the very end of …\nReturn the PDF document catalog, which is the root of the …\nReturn a mutable reference to the PDF document catalog, …\nChange producer of document information dictionary.\nChildren, Must be a Collection that allows for insertion …\nR,G,B\nCompress PDF stream objects.\nContents of the stream in bytes\nCreate new <code>IncrementalDocument</code> from the bytes and document.\nDecode content after decoding all stream filters.\nDecodes a text string. Depending on the BOM at the start …\nDecompress PDF stream objects.\nReplaces all encrypted Strings and Streams with their …\nDelete object by object ID.\nDelete pages.\nDelete zero length stream objects.\nFollow references if the supplied object is a reference.\nAssociated stream dictionary\nEncodes the given <code>str</code> to UTF-16BE. The recommended way to …\nEncodes the given <code>str</code> to UTF-8. This method of encoding …\n0, 1 for italic, 2 for bold, 3 for italic bold\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet decoded page content;\nExtract object from dictionary, dereferencing the object …\nGet dictionary in dictionary by key.\nGet dictionary object by id.\nGet a mutable dictionary object by id.\nReturn dictionary with encryption information\nGet object by object id, will iteratively dereference a …\nGet mutable reference to object by object ID, will …\nGet page object_id of the specified object object_id\nGet the page’s resource dictionary.\nGet the page’s resource dictionary (only in new …\nGet the PDF annotations of a page. The /Subtype of each …\nGet content of a page.\nGet content stream object ids of a page.\nGet fonts used by a page.\nGet resources used by a page.\nGet page numbers and corresponding object ids.\nGet the structure of the previous documents (all prev …\nGet the bytes of the previous documents.\nDetermines if an object exists in the current document (or …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn true is PDF document is encrypted\nLoad a PDF document from a specified file path.\nLoad a PDF document from a specified file path.\nLoad a PDF document from an arbitrary source.\nLoad a PDF document from an arbitrary source.\nLoad a PDF document from a memory slice.\nLoad a PDF document from a memory slice.\nCurrent maximum object id within Bookmarks.\nCurrent maximum object id within the document.\nCreate new PDF document.\nCreate new PDF document.\nA new document appended to the previously loaded file.\nCreate a new PDF document that is an incremental update to …\nCreate an object ID.\nThe objects that make up the document contained in the …\nClone Object from previous document to new document. If …\nPrune all unused objects.\nRead whole document.\nThe cross-reference table contains locations of the …\nRemove PDF object from document’s object list.\nRenumber objects, normally called after …\nRenumber objects with a custom starting id, this is very …\nSave PDF document to specified file path.\nSave PDF document to specified file path.\nSave PDF to arbitrary target\nSave PDF to arbitrary target\nStream data’s position in PDF file.\nCreates a text string. If the input only contains ASCII …\nThe trailer gives the location of the cross-reference …\nTraverse objects from trailer recursively, return all …\nThe version of the PDF specification to which the file …\nDefault is that the stream may be compressed. On font …\nCreate new PDF document with version.\nThe byte the cross-reference table starts at. This value …\nDecode content operations.\nEncode content operations.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecrypts <code>obj</code> and returns the content of the string or …\nReturns the argument unchanged.\nGenerates the encryption key for the document and, if …\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nImage Data\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nOrigin Stream Dictionary\nCross-Reference Streams are supported beginning with PDF …\nCross-Reference Table is older but still frequently used.\nType of Cross-Reference used in the last incremental …\nDecode CrossReferenceStream\nEntries for indirect object.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCombine Xref entries. Only add them if they do not exists …\nTotal number of entries (including free entries), equal to …\nWrite Entry in Cross Reference Table.\nWrite Section in Cross Reference Table.")