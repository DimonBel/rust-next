(function() {
    var type_impls = Object.fromEntries([["euclid",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CSize3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1207-1218\">Source</a><a href=\"#impl-Add%3CSize3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1208\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1211-1217\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<Size3D<T, U>>","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CVector3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1229-1236\">Source</a><a href=\"#impl-Add%3CVector3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1230\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1233-1235\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<Vector3D<T, U>>","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CSize3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1220-1227\">Source</a><a href=\"#impl-AddAssign%3CSize3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;<a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1222-1226\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<Size3D<T, U>>","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CVector3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1238-1243\">Source</a><a href=\"#impl-AddAssign%3CVector3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;T, Output = T&gt;, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;<a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1240-1242\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<Vector3D<T, U>>","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ApproxEq%3CPoint3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1407-1423\">Source</a><a href=\"#impl-ApproxEq%3CPoint3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"euclid/approxeq/trait.ApproxEq.html\" title=\"trait euclid::approxeq::ApproxEq\">ApproxEq</a>&lt;T&gt;, U&gt; <a class=\"trait\" href=\"euclid/approxeq/trait.ApproxEq.html\" title=\"trait euclid::approxeq::ApproxEq\">ApproxEq</a>&lt;<a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.approx_epsilon\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1409-1415\">Source</a><a href=\"#method.approx_epsilon\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/approxeq/trait.ApproxEq.html#tymethod.approx_epsilon\" class=\"fn\">approx_epsilon</a>() -&gt; Self</h4></section></summary><div class='docblock'>Default epsilon value</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.approx_eq_eps\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1418-1422\">Source</a><a href=\"#method.approx_eq_eps\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/approxeq/trait.ApproxEq.html#tymethod.approx_eq_eps\" class=\"fn\">approx_eq_eps</a>(&amp;self, other: &amp;Self, eps: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> is this object is approximately equal to the other one, using\na provided epsilon value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.approx_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/approxeq.rs.html#21-23\">Source</a><a href=\"#method.approx_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/approxeq/trait.ApproxEq.html#method.approx_eq\" class=\"fn\">approx_eq</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> is this object is approximately equal to the other one, using\nthe <code>approx_epsilon()</code> epsilon value.</div></details></div></details>","ApproxEq<Point3D<T, U>>","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ceil-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1391-1397\">Source</a><a href=\"#impl-Ceil-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"euclid/num/trait.Ceil.html\" title=\"trait euclid::num::Ceil\">Ceil</a>, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Ceil.html\" title=\"trait euclid::num::Ceil\">Ceil</a> for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1394-1396\">Source</a><a href=\"#method.ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Ceil.html#tymethod.ceil\" class=\"fn\">ceil</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>See <a href=\"#method.ceil\">Point3D::ceil()</a></p>\n</div></details></div></details>","Ceil","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#715-724\">Source</a><a href=\"#impl-Clone-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#716-723\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.84.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.84.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#780-788\">Source</a><a href=\"#impl-Debug-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#781-787\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.84.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.84.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#802-806\">Source</a><a href=\"#impl-Default-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#803-805\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.84.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#790-800\">Source</a><a href=\"#impl-Display-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#791-799\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.84.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.84.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Point3D%3CT,+U2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1356-1367\">Source</a><a href=\"#impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Point3D%3CT,+U2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>, U1, U2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, U1, U2&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U2&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1357\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>, U1&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1360-1366\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, scale: <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, U1, U2&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Scale<T, U1, U2>>","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CT%3E-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1334-1345\">Source</a><a href=\"#impl-Div%3CT%3E-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1335\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1338-1344\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, scale: T) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<T>","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1369-1374\">Source</a><a href=\"#impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, U, U&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1371-1373\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, scale: <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, U, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<Scale<T, U, U>>","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CT%3E-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1347-1354\">Source</a><a href=\"#impl-DivAssign%3CT%3E-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1349-1353\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, scale: T)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<T>","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Floor-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1399-1405\">Source</a><a href=\"#impl-Floor-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"euclid/num/trait.Floor.html\" title=\"trait euclid::num::Floor\">Floor</a>, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Floor.html\" title=\"trait euclid::num::Floor\">Floor</a> for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1402-1404\">Source</a><a href=\"#method.floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Floor.html#tymethod.floor\" class=\"fn\">floor</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>See <a href=\"#method.floor\">Point3D::floor()</a></p>\n</div></details></div></details>","Floor","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+3%5D%3E-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1431-1435\">Source</a><a href=\"#impl-From%3C%5BT;+3%5D%3E-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.0/std/primitive.array.html\">[T; 3]</a>&gt; for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1432-1434\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>([x, y, z]: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.0/std/primitive.array.html\">[T; 3]</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 3]>","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T)%3E-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1443-1447\">Source</a><a href=\"#impl-From%3C(T,+T,+T)%3E-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.0/std/primitive.tuple.html\">(T, T, T)</a>&gt; for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1444-1446\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tuple: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.0/std/primitive.tuple.html\">(T, T, T)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T)>","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#769-778\">Source</a><a href=\"#impl-Hash-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#773-777\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, h: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.0/std/primitive.reference.html\">&amp;mut H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.84.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.84.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.84.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.84.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Into%3C%5BT;+3%5D%3E-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1425-1429\">Source</a><a href=\"#impl-Into%3C%5BT;+3%5D%3E-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.0/std/primitive.array.html\">[T; 3]</a>&gt; for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1426-1428\">Source</a><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.0/std/primitive.array.html\">[T; 3]</a></h4></section></summary><div class='docblock'>Converts this type into the (usually inferred) input type.</div></details></div></details>","Into<[T; 3]>","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Into%3C(T,+T,+T)%3E-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1437-1441\">Source</a><a href=\"#impl-Into%3C(T,+T,+T)%3E-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.0/std/primitive.tuple.html\">(T, T, T)</a>&gt; for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1438-1440\">Source</a><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.0/std/primitive.tuple.html\">(T, T, T)</a></h4></section></summary><div class='docblock'>Converts this type into the (usually inferred) input type.</div></details></div></details>","Into<(T, T, T)>","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Point3D%3CT,+U1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1314-1325\">Source</a><a href=\"#impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Point3D%3CT,+U1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>, U1, U2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, U1, U2&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U1&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1315\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, U2&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1318-1324\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, scale: <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, U1, U2&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Scale<T, U1, U2>>","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CT%3E-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1292-1303\">Source</a><a href=\"#impl-Mul%3CT%3E-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1293\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1296-1302\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, scale: T) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<T>","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1327-1332\">Source</a><a href=\"#impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, U, U&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1329-1331\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, scale: <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, U, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<Scale<T, U, U>>","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CT%3E-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1305-1312\">Source</a><a href=\"#impl-MulAssign%3CT%3E-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1307-1311\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, scale: T)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<T>","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1198-1205\">Source</a><a href=\"#impl-Neg-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1199\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1202-1204\">Source</a><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#760-767\">Source</a><a href=\"#impl-PartialEq-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#764-766\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.0/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1066-1096\">Source</a><a href=\"#impl-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>, U&gt; <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.min\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1068-1074\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self</h4></section><section id=\"method.max\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1077-1083\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1090-1095\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.clamp\" class=\"fn\">clamp</a>(&amp;self, start: Self, end: Self) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the point each component of which clamped by corresponding\ncomponents of <code>start</code> and <code>end</code>.</p>\n<p>Shortcut for <code>self.max(start).min(end)</code>.</p>\n</div></details></div></details>",0,"euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1098-1178\">Source</a><a href=\"#impl-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, U&gt; <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1105-1107\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.cast\" class=\"fn\">cast</a>&lt;NewT: <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a>&gt;(&amp;self) -&gt; <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;NewT, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast from one numeric representation to another, preserving the units.</p>\n<p>When casting from floating point to integer coordinates, the decimals are truncated\nas one would expect from a simple cast, but this behavior does not always make sense\ngeometrically. Consider using <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before casting.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_cast\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1114-1123\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.try_cast\" class=\"fn\">try_cast</a>&lt;NewT: <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a>&gt;(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;NewT, U&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Fallible cast from one numeric representation to another, preserving the units.</p>\n<p>When casting from floating point to integer coordinates, the decimals are truncated\nas one would expect from a simple cast, but this behavior does not always make sense\ngeometrically. Consider using <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before casting.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1129-1131\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.to_f32\" class=\"fn\">to_f32</a>(&amp;self) -&gt; <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.0/std/primitive.f32.html\">f32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>f32</code> point.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1135-1137\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.to_f64\" class=\"fn\">to_f64</a>(&amp;self) -&gt; <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.0/std/primitive.f64.html\">f64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>f64</code> point.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1145-1147\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.to_usize\" class=\"fn\">to_usize</a>(&amp;self) -&gt; <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.0/std/primitive.usize.html\">usize</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>usize</code> point, truncating decimals if any.</p>\n<p>When casting from floating point points, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u32\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1155-1157\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.to_u32\" class=\"fn\">to_u32</a>(&amp;self) -&gt; <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.0/std/primitive.u32.html\">u32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>u32</code> point, truncating decimals if any.</p>\n<p>When casting from floating point points, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i32\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1165-1167\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.to_i32\" class=\"fn\">to_i32</a>(&amp;self) -&gt; <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.0/std/primitive.i32.html\">i32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>i32</code> point, truncating decimals if any.</p>\n<p>When casting from floating point points, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i64\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1175-1177\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.to_i64\" class=\"fn\">to_i64</a>(&amp;self) -&gt; <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.0/std/primitive.i64.html\">i64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>i64</code> point, truncating decimals if any.</p>\n<p>When casting from floating point points, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details></div></details>",0,"euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1180-1189\">Source</a><a href=\"#impl-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;T, Output = T&gt;, U&gt; <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.add_size\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1182-1188\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.add_size\" class=\"fn\">add_size</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;) -&gt; Self</h4></section></div></details>",0,"euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1191-1196\">Source</a><a href=\"#impl-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"num_traits/float/trait.Float.html\" title=\"trait num_traits::float::Float\">Float</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;T, Output = T&gt;, U&gt; <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.distance_to\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1193-1195\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.distance_to\" class=\"fn\">distance_to</a>(self, other: Self) -&gt; T</h4></section></div></details>",0,"euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#808-849\">Source</a><a href=\"#impl-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.origin\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#811-816\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.origin\" class=\"fn\">origin</a>() -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>,</div></h4></section></summary><div class=\"docblock\"><p>Constructor, setting all components to zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#820-825\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>,</div></h4></section></summary><div class=\"docblock\"><p>The same as <a href=\"#method.origin\"><code>origin()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#829-836\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"euclid/struct.Point3D.html#tymethod.new\" class=\"fn\">new</a>(x: T, y: T, z: T) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Constructor taking scalar values directly.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_lengths\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#840-842\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.from_lengths\" class=\"fn\">from_lengths</a>(x: <a class=\"struct\" href=\"euclid/struct.Length.html\" title=\"struct euclid::Length\">Length</a>&lt;T, U&gt;, y: <a class=\"struct\" href=\"euclid/struct.Length.html\" title=\"struct euclid::Length\">Length</a>&lt;T, U&gt;, z: <a class=\"struct\" href=\"euclid/struct.Length.html\" title=\"struct euclid::Length\">Length</a>&lt;T, U&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Constructor taking properly Lengths instead of scalar values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_untyped\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#846-848\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.from_untyped\" class=\"fn\">from_untyped</a>(p: <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, <a class=\"struct\" href=\"euclid/struct.UnknownUnit.html\" title=\"struct euclid::UnknownUnit\">UnknownUnit</a>&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Tag a unitless value with units.</p>\n</div></details></div></details>",0,"euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#851-1064\">Source</a><a href=\"#impl-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, U&gt; <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_vector\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#856-863\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.to_vector\" class=\"fn\">to_vector</a>(&amp;self) -&gt; <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast this point into a vector.</p>\n<p>Equivalent to subtracting the origin to this point.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.xy\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#867-869\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.xy\" class=\"fn\">xy</a>(&amp;self) -&gt; <a class=\"struct\" href=\"euclid/struct.Point2D.html\" title=\"struct euclid::Point2D\">Point2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a 2d point using this point’s x and y coordinates</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.xz\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#873-875\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.xz\" class=\"fn\">xz</a>(&amp;self) -&gt; <a class=\"struct\" href=\"euclid/struct.Point2D.html\" title=\"struct euclid::Point2D\">Point2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a 2d point using this point’s x and z coordinates</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.yz\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#879-881\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.yz\" class=\"fn\">yz</a>(&amp;self) -&gt; <a class=\"struct\" href=\"euclid/struct.Point2D.html\" title=\"struct euclid::Point2D\">Point2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a 2d point using this point’s x and z coordinates</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_array\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#896-898\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.to_array\" class=\"fn\">to_array</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.0/std/primitive.array.html\">[T; 3]</a></h4></section></summary><div class=\"docblock\"><p>Cast into an array with x, y and z.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"kw\">let </span>point: Point3D&lt;<span class=\"kw\">_</span>, Mm&gt; = point3(<span class=\"number\">1</span>, -<span class=\"number\">8</span>, <span class=\"number\">0</span>);\n\n<span class=\"macro\">assert_eq!</span>(point.to_array(), [<span class=\"number\">1</span>, -<span class=\"number\">8</span>, <span class=\"number\">0</span>]);</code></pre></div>\n</div></details><section id=\"method.to_array_4d\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#901-906\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.to_array_4d\" class=\"fn\">to_array_4d</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.0/std/primitive.array.html\">[T; 4]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.One.html\" title=\"trait euclid::num::One\">One</a>,</div></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_tuple\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#921-923\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.to_tuple\" class=\"fn\">to_tuple</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.0/std/primitive.tuple.html\">(T, T, T)</a></h4></section></summary><div class=\"docblock\"><p>Cast into a tuple with x, y and z.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"kw\">let </span>point: Point3D&lt;<span class=\"kw\">_</span>, Mm&gt; = point3(<span class=\"number\">1</span>, -<span class=\"number\">8</span>, <span class=\"number\">0</span>);\n\n<span class=\"macro\">assert_eq!</span>(point.to_tuple(), (<span class=\"number\">1</span>, -<span class=\"number\">8</span>, <span class=\"number\">0</span>));</code></pre></div>\n</div></details><section id=\"method.to_tuple_4d\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#926-931\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.to_tuple_4d\" class=\"fn\">to_tuple_4d</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.0/std/primitive.tuple.html\">(T, T, T, T)</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.One.html\" title=\"trait euclid::num::One\">One</a>,</div></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_untyped\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#948-950\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.to_untyped\" class=\"fn\">to_untyped</a>(&amp;self) -&gt; <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, <a class=\"struct\" href=\"euclid/struct.UnknownUnit.html\" title=\"struct euclid::UnknownUnit\">UnknownUnit</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Drop the units, preserving only the numeric value.</p>\n<h5 id=\"example-2\"><a class=\"doc-anchor\" href=\"#example-2\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"kw\">let </span>point: Point3D&lt;<span class=\"kw\">_</span>, Mm&gt; = point3(<span class=\"number\">1</span>, -<span class=\"number\">8</span>, <span class=\"number\">0</span>);\n\n<span class=\"macro\">assert_eq!</span>(point.x, point.to_untyped().x);\n<span class=\"macro\">assert_eq!</span>(point.y, point.to_untyped().y);\n<span class=\"macro\">assert_eq!</span>(point.z, point.to_untyped().z);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_unit\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#968-970\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.cast_unit\" class=\"fn\">cast_unit</a>&lt;V&gt;(&amp;self) -&gt; <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, V&gt;</h4></section></summary><div class=\"docblock\"><p>Cast the unit, preserving the numeric value.</p>\n<h5 id=\"example-3\"><a class=\"doc-anchor\" href=\"#example-3\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n<span class=\"kw\">enum </span>Cm {}\n\n<span class=\"kw\">let </span>point: Point3D&lt;<span class=\"kw\">_</span>, Mm&gt; = point3(<span class=\"number\">1</span>, -<span class=\"number\">8</span>, <span class=\"number\">0</span>);\n\n<span class=\"macro\">assert_eq!</span>(point.x, point.cast_unit::&lt;Cm&gt;().x);\n<span class=\"macro\">assert_eq!</span>(point.y, point.cast_unit::&lt;Cm&gt;().y);\n<span class=\"macro\">assert_eq!</span>(point.z, point.cast_unit::&lt;Cm&gt;().z);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_2d\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#974-976\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.to_2d\" class=\"fn\">to_2d</a>(&amp;self) -&gt; <a class=\"struct\" href=\"euclid/struct.Point2D.html\" title=\"struct euclid::Point2D\">Point2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Convert into a 2d point.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#990-995\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.round\" class=\"fn\">round</a>(&amp;self) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Round.html\" title=\"trait euclid::num::Round\">Round</a>,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the nearest integer value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(point3::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>, <span class=\"number\">0.4</span>).round(), point3::&lt;<span class=\"kw\">_</span>, Mm&gt;(<span class=\"number\">0.0</span>, -<span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1009-1014\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.ceil\" class=\"fn\">ceil</a>(&amp;self) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Ceil.html\" title=\"trait euclid::num::Ceil\">Ceil</a>,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the smallest integer equal or greater than the original value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(point3::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>, <span class=\"number\">0.4</span>).ceil(), point3::&lt;<span class=\"kw\">_</span>, Mm&gt;(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1028-1033\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.floor\" class=\"fn\">floor</a>(&amp;self) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Floor.html\" title=\"trait euclid::num::Floor\">Floor</a>,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the biggest integer equal or lower than the original value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(point3::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>, <span class=\"number\">0.4</span>).floor(), point3::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">1.0</span>, -<span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lerp\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1053-1063\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Point3D.html#tymethod.lerp\" class=\"fn\">lerp</a>(&amp;self, other: Self, t: T) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.One.html\" title=\"trait euclid::num::One\">One</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Linearly interpolate between this point and another point.</p>\n<h5 id=\"example-4\"><a class=\"doc-anchor\" href=\"#example-4\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::point3;\n<span class=\"kw\">use </span>euclid::default::Point3D;\n\n<span class=\"kw\">let </span>from: Point3D&lt;<span class=\"kw\">_</span>&gt; = point3(<span class=\"number\">0.0</span>, <span class=\"number\">10.0</span>, -<span class=\"number\">1.0</span>);\n<span class=\"kw\">let </span>to:  Point3D&lt;<span class=\"kw\">_</span>&gt; = point3(<span class=\"number\">8.0</span>, -<span class=\"number\">4.0</span>,  <span class=\"number\">0.0</span>);\n\n<span class=\"macro\">assert_eq!</span>(from.lerp(to, -<span class=\"number\">1.0</span>), point3(-<span class=\"number\">8.0</span>,  <span class=\"number\">24.0</span>, -<span class=\"number\">2.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">0.0</span>), point3( <span class=\"number\">0.0</span>,  <span class=\"number\">10.0</span>, -<span class=\"number\">1.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">0.5</span>), point3( <span class=\"number\">4.0</span>,   <span class=\"number\">3.0</span>, -<span class=\"number\">0.5</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">1.0</span>), point3( <span class=\"number\">8.0</span>,  -<span class=\"number\">4.0</span>,  <span class=\"number\">0.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">2.0</span>), point3(<span class=\"number\">16.0</span>, -<span class=\"number\">18.0</span>,  <span class=\"number\">1.0</span>));</code></pre></div>\n</div></details></div></details>",0,"euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Round-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1383-1389\">Source</a><a href=\"#impl-Round-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"euclid/num/trait.Round.html\" title=\"trait euclid::num::Round\">Round</a>, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Round.html\" title=\"trait euclid::num::Round\">Round</a> for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1386-1388\">Source</a><a href=\"#method.round\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Round.html#tymethod.round\" class=\"fn\">round</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>See <a href=\"#method.round\">Point3D::round()</a></p>\n</div></details></div></details>","Round","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CSize3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1254-1265\">Source</a><a href=\"#impl-Sub%3CSize3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1255\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1258-1264\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<Size3D<T, U>>","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CVector3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1276-1283\">Source</a><a href=\"#impl-Sub%3CVector3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1277\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1280-1282\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<Vector3D<T, U>>","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1245-1252\">Source</a><a href=\"#impl-Sub-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1246\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1249-1251\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: Self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CSize3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1267-1274\">Source</a><a href=\"#impl-SubAssign%3CSize3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;<a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1269-1273\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"euclid/struct.Size3D.html\" title=\"struct euclid::Size3D\">Size3D</a>&lt;T, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<Size3D<T, U>>","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CVector3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1285-1290\">Source</a><a href=\"#impl-SubAssign%3CVector3D%3CT,+U%3E%3E-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;T, Output = T&gt;, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;<a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1287-1289\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.84.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<Vector3D<T, U>>","euclid::default::Point3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1376-1381\">Source</a><a href=\"#impl-Zero-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a> for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#1378-1380\">Source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; Self</h4></section></div></details>","Zero","euclid::default::Point3D"],["<section id=\"impl-Copy-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#713\">Source</a><a href=\"#impl-Copy-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h3></section>","Copy","euclid::default::Point3D"],["<section id=\"impl-Eq-for-Point3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/point.rs.html#758\">Source</a><a href=\"#impl-Eq-for-Point3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","euclid::default::Point3D"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[101143]}